# ----------- Build the application -----------
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
WORKDIR /src

# Copy project files first for better layer caching
COPY Empire.Shared/Empire.Shared.csproj Empire.Shared/
COPY Empire.Client/Empire.Client.csproj Empire.Client/
COPY Empire.Server/Empire.Server.csproj Empire.Server/

# Restore dependencies for all projects
RUN dotnet restore Empire.Server/Empire.Server.csproj
RUN dotnet restore Empire.Client/Empire.Client.csproj

# Copy source files
COPY Empire.Shared/ Empire.Shared/
COPY Empire.Client/ Empire.Client/
COPY Empire.Server/ Empire.Server/
COPY Empire.sln .

# Remove any image directories that might have been copied
RUN rm -rf Empire.Client/wwwroot/images/Cards/ || true
RUN rm -rf Empire.Client/wwwroot/images/cards/ || true

# CRITICAL FIX: Build Blazor Client first to ensure all framework files are included
RUN dotnet publish Empire.Client/Empire.Client.csproj -c Release -o /app/client-publish --no-restore

# Build server
RUN dotnet publish Empire.Server/Empire.Server.csproj -c Release -o /app/server-publish --no-restore

# CRITICAL FIX: Copy Blazor client files to server wwwroot
RUN mkdir -p /app/server-publish/wwwroot
RUN cp -r /app/client-publish/* /app/server-publish/wwwroot/

# Verify critical files are present (this will fail the build if files are missing)
RUN ls -la /app/server-publish/wwwroot/_framework/
RUN test -f /app/server-publish/wwwroot/_framework/icudt.dat || (echo "ERROR: icudt.dat not found!" && exit 1)
RUN test -f /app/server-publish/wwwroot/_framework/dotnet.wasm || (echo "ERROR: dotnet.wasm not found!" && exit 1)

# ----------- Runtime image -----------
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS final
WORKDIR /app

# Copy the complete published application
COPY --from=build /app/server-publish .

# Verify files are in the final container
RUN ls -la /app/wwwroot/_framework/ || echo "Framework directory not found"

EXPOSE 80
ENTRYPOINT ["dotnet", "Empire.Server.dll"]
