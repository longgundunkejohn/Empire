@using Microsoft.AspNetCore.Components.Web

<div class="card-back-container" @onclick="HandleClick">
    <img src="@CardBackPath" alt="Card Back" class="card-back-image" />
    @if (DeckCount > 0)
    {
        <div class="deck-count-badge">@DeckCount</div>
    }
    @if (DeckCount == 0)
    {
        <div class="empty-deck-overlay">
            <span>Empty</span>
        </div>
    }
</div>

@code {
    [Parameter] public int DeckCount { get; set; }
    [Parameter] public string CardBackPath { get; set; } = "";
    [Parameter] public EventCallback OnDraw { get; set; }

    private async Task HandleClick()
    {
        if (DeckCount > 0 && OnDraw.HasDelegate)
        {
            await OnDraw.InvokeAsync();
        }
    }
}

<style>
.card-back-container {
    position: relative;
    cursor: pointer;
    transition: transform 0.2s ease;
    width: 80px;
    height: 112px;
}

.card-back-container:hover {
    transform: scale(1.05);
}

.card-back-image {
    width: 100%;
    height: 100%;
    border-radius: 8px;
    border: 2px solid #8b4513;
    object-fit: cover;
}

.deck-count-badge {
    position: absolute;
    top: -8px;
    right: -8px;
    background: #d4af37;
    color: #2c1810;
    border-radius: 50%;
    width: 24px;
    height: 24px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 0.8rem;
    font-weight: bold;
    border: 2px solid #8b4513;
}

.empty-deck-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.7);
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 8px;
    color: #f44336;
    font-weight: bold;
    font-size: 0.9rem;
}

.card-back-container.empty {
    opacity: 0.5;
    cursor: not-allowed;
}

.card-back-container.empty:hover {
    transform: none;
}
</style>
